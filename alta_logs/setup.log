> alta::tcl_whisper "Cmd : [alta::prog_path] [alta::prog_version]([alta::prog_subversion])\n"
Cmd : D:/Download/Supra/bin/af.exe 2023.02.b0(7773ca8a)
> alta::tcl_whisper "Args : $tcl_cmd_args\n"
Args : -X {set DEVICE_FAMILY 1} -X {set MODE QUARTUS} -X {set DESIGN usb_capture} -X {set TOP_MODULE usb_capture} -X {set DEVICE AG1280Q48} -X {set AF_QUARTUS_TEMPL "D:/Download/Supra/etc/af_quartus.tcl"} -X {set AF_QUARTUS "./af_quartus.tcl"} -X {set AF_IP_TEMPL "D:/Download/Supra/etc/af_ip.tcl"} -X {set AF_IP "./af_ip.tcl"} -X {set AF_MAP_TEMPL "D:/Download/Supra/etc/af_map.tcl"} -X {set AF_MAP "./af_map.tcl"} -X {set AF_RUN_TEMPL "D:/Download/Supra/etc/af_run.tcl"} -X {set AF_RUN "./af_run.tcl"} -X {set AF_BATCH_TEMPL "D:/Download/Supra/etc/af_batch.tcl"} -X {set AF_BATCH "./af_batch.tcl"} -X {set WORK_DIR "."} -X {set IP_FILES {"D:/Projects/ss_usb_analyzer/dual_ram.ip" }} -F D:/Download/Supra/etc/af_setup_.tcl
> 
> if { [info exists TIMING_DERATE] } {
  set ar_timing_derate ${TIMING_DERATE}
}
> 
> load_architect -no_route -type ${DEVICE} 1 1 1000 1000
Total IO  : 84
Total Pin : 40/7
Top array is built.
Loading architect libraries...
## CPU time: 0:0:0, REAL time: 0:0:0
## Memory Usage: 33MB (33MB)
> foreach ip_file $IP_FILES {
  read_ip $ip_file
}
> 
> if { [info exist DEVICE_FAMILY] } {
  set db_target_device_family $DEVICE_FAMILY
}
> set ret [alta::setupRun ${DESIGN} ${TOP_MODULE} \
                        "${IP_FILES}" \
                        "${VERILOG_FILES}" \
                        "${VQM_FILES}" \
                        "${VHDL_FILES}"\
                        "${AF_QUARTUS_TEMPL}" "${AF_QUARTUS}"\
                        "${AF_IP_TEMPL}" "${AF_IP}" \
                        "${AF_MAP_TEMPL}" "${AF_MAP}" \
                        "${AF_RUN_TEMPL}" "${AF_RUN}" \
                        "${AF_BATCH_TEMPL}" "${AF_BATCH}" \
                        "${VE_FILE}" \
                        "${WORK_DIR}" "${ORIGINAL_DIR}" "${ORIGINAL_OUTPUT}"\
                        "${ORIGINAL_QSF}" "${ORIGINAL_PIN}" \
                        "${GCLK_CNT}" "${USE_DESIGN_TEMPL}"]
> if { !$ret } { exit -1 }
> 
> alta::tcl_print "\nSetup done...\n"

Setup done...
> alta::tcl_print "Next, compile with quartus using one of following 2 approaches:\n"
Next, compile with quartus using one of following 2 approaches:
> alta::tcl_print " 1) Command line base, run \'quartus_sh -t af_quartus.tcl\'\n"
 1) Command line base, run 'quartus_sh -t af_quartus.tcl'
> alta::tcl_print " 2) GUI base, start quartus GUI, open project ${DESIGN},\n"
 2) GUI base, start quartus GUI, open project usb_capture,
> alta::tcl_print "    select Tools->Tcl Scripts..., load af_quartus.tcl and run\n"
    select Tools->Tcl Scripts..., load af_quartus.tcl and run
> alta::tcl_print "Then, run \'af_run\' to generate ${DESIGN} bit-stream files\n"
Then, run 'af_run' to generate usb_capture bit-stream files
> 
> exit

Total 0 fatals, 0 errors, 0 warnings, 0 infos.
